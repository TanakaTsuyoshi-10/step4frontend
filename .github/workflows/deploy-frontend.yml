name: Deploy Frontend to Azure App Service (standalone-flat)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 22
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: Create production env file
      run: |
        echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" > .env.production
        cat .env.production

    - name: Install deps
      run: npm ci

    - name: Build
      run: npm run build

    - name: Show .next (top 2 levels)
      run: |
        set -xe
        find .next -maxdepth 2 -type d -print
        ls -la .next | sed -n '1,120p'

    - name: Prepare release (flat from standalone)
      run: |
        set -xe
        rm -rf release
        mkdir -p release/.next
        # 1) standalone の中身をルートへフラットコピー（Next純正 server.js をルートへ）
        cp -R .next/standalone/* release/
        # 2) ルート .next へ必要なビルド物を配置
        cp -R .next/static release/.next/
        cp .next/BUILD_ID release/.next/BUILD_ID
        # 3) 公開ファイル
        cp -R public release/public
        # 4) dotenv / package.json も一応同梱
        cp -f .env.production release/.env.production || true
        cp -f package.json release/package.json || true

        echo "== release tree =="
        find release -maxdepth 3 -print | sed -n '1,300p'
        test -f release/server.js
        test -f release/.next/BUILD_ID

    - name: Zip
      run: |
        cd release
        zip -qr ../release.zip .
        cd ..
        ls -lh release.zip

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: release.zip
        slot-name: 'production'