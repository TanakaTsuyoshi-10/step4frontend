name: Deploy Frontend to Azure App Service (zip-run)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      - name: Build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        run: |
          # 本番用 env を生成（必要なら）
          echo "NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}" > .env.production
          npm run build
          echo "[debug] .next top-level:"
          find .next -maxdepth 2 -type f | sed -n '1,200p'

      - name: Make release folder
        run: |
          rm -rf release && mkdir -p release/.next
          # 必須ファイル
          cp -f server.js package.json release/
          # env（存在すれば）
          [ -f .env.production ] && cp -f .env.production release/ || true
          # public（存在すれば）
          [ -d public ] && cp -R public release/ || true
          # .next 配下（重要: server/ を追加）
          cp -f .next/BUILD_ID release/.next/
          cp -R .next/standalone release/.next/
          cp -R .next/static release/.next/
          cp -R .next/server release/.next/
          # （任意）trace
          [ -d .next/trace ] && cp -R .next/trace release/.next/ || true

          echo "[release] snapshot:"
          find release -maxdepth 4 -type f | sed -n '1,300p'

      - name: Zip
        run: |
          cd release
          zip -r ../release.zip .

      - name: Deploy to Azure
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: release.zip
          slot-name: production

      - name: Post log
        run: echo "Deployed release.zip with .next/server included."